name: Deploy Jekyll and Run Python Script

on:
  push:
    branches: ["main"]
  workflow_dispatch:  # Allows manual triggering of the workflow
  schedule:
    - cron: '0 * * * *'  # Runs every hour at the top of the hour

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job for Jekyll
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job for GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Job to run the Python script
  run_script:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify the Python version you want to use

      - name: Install Dependencies
        run: |
          # Automatically generate a requirements.txt file if it doesn't exist
          if [ ! -f requirements.txt ]; then
            echo "Generating requirements.txt..."
            pip freeze > requirements.txt
          fi
          pip install -r requirements.txt  # Install any dependencies if you have a requirements.txt

      - name: Run Automate Script
        run: |
          python auto.py  # Execute your auto.py script
